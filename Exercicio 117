Faça um programa que valide um CPF informado pelo usuário, através
do cálculo do dígito verificador (check-digit).

Function Main()
 
    Local nI, nCPF, nResto, nN := 0
    Local nPrimeiro := 0
    Local nSegundo := 0
    Local nSoma := 0
    Local cNum := ""
    Local aCPF := {}
   
    ACCEPT "Digite um numero de CPF : " TO nCPF
 
    aCPF := array(11)
            for nI := 1 to 11
                aCPF[nI] := val(SubStr(nCPF, nI , 1))
            next nI
   
    For nI := 1 TO 9
        cNum := substr(nCPF, nI, 1)
        nN := Val(cNum) * nI
        nSoma += nN
    Next nI
   
    nResto := Round(nSoma % 11, 0)
   
    if nResto >= 10
        nResto := 0
    endif
   
    nPrimeiro := nResto
   
    nSoma := 0
    nResto := 0
   
    For nI := 2 TO 10
        cNum := substr(nCPF, nI, 1)
        nN := Val(cNum) * (nI - 1)
        nSoma += nN
    Next nI
   
    nResto := Round(nSoma % 11, 0)
       
    if nResto >= 10
        nResto := 0
    endif
   
    nSegundo := nResto
 
            If aCPF[1] = aCPF[2] .and. aCPF[2] = aCPF[3] .and. aCPF[3] = aCPF[4] .and. aCPF[4] = aCPF[5] .and. aCPF[5] = aCPF[6] .and. aCPF[6] = aCPF[7] .and. aCPF[7] = aCPF[8] .and. aCPF[8] = aCPF[9] .and. aCPF[9] = aCPF[10] .and. aCPF[10] = aCPF[11]
                qout("CPF INVÁLIDO")
            Elseif val(substr(nCPF, 10, 1)) == nPrimeiro .or. Val(substr(nCPF, 11, 1)) == nSegundo
            qout("CPF VÁLIDO")
        ELSE
            qout("CPF INVÁLIDO")
        endif
    Return .t.
